name: Snyk Security

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v4

      # Set up Snyk CLI to check for security issues
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@v2  # Cambiado de v4 a v2
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements_cpu.txt
          pip install -r requirements_gpu.txt

      # Run Snyk Open Source analysis (SCA) for the dependencies in requirements_cpu.txt and requirements_gpu.txt
      - name: Run Snyk Open Source (SCA) test for requirements_cpu.txt
        run: snyk test --file=requirements_cpu.txt --package-manager=pip

      - name: Run Snyk Open Source (SCA) test for requirements_gpu.txt
        run: snyk test --file=requirements_gpu.txt --package-manager=pip

      # Run Snyk Code (SAST) to check for vulnerabilities in the code and upload results to GitHub Security tab
      - name: Run Snyk Code to check for vulnerabilities
        run: snyk code test --sarif || exit 1

      # Monitor the project for Snyk Open Source vulnerabilities and track them
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects

      # Run Snyk IaC (Infrastructure as Code) test and report
      - name: Snyk IaC test and report
        run: snyk iac test --report || true

      # Build a Docker image (if applicable)
      - name: Build a Docker image
        run: docker build -t your/image-to-test .

      # Run Snyk Container analysis and monitor the Docker image
      - name: Snyk Container monitor
        run: snyk container monitor your/image-to-test --file=Dockerfile

      # Upload the Snyk Code results into GitHub Code Scanning tab (SARIF format)
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
